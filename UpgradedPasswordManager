from tkinter import *
from tkinter import messagebox
import random
import pyperclip
import json


# ---------------------------- PASSWORD GENERATOR ------------------------------- #
def generate():
    alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u",
                "v", "w", "x", "y", "z"]
    password = ""

    # Clear text
    password_entry.delete(0, END)

    # Fill letters
    for _ in range(12):
        password += (random.choice(alphabet))

    # Replace some letters with upper case
    for _ in range(random.randint(1, 5)):
        random_letter = password[random.randint(1, 9)]
        password = password.replace(random_letter, random_letter.upper())

    # Replace some lower case letters with numbers
    for _ in range(random.randint(1, 5)):
        num = str(random.randint(0, 9))
        random_letter = password[random.randint(1, 9)]
        if random_letter.islower():
            password = password.replace(random_letter, num)

    password_entry.insert(0, password)
    pyperclip.copy(password)


# ---------------------------- SAVE PASSWORD ------------------------------- #
def save_password():

    website = website_entry.get()
    username = username_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "username": username,
            "password": password,
        }
    }
    empty = False

    for _ in website, username, password:
        if _ == "":
            empty = True

    if empty:
        messagebox.showinfo("Alert", "Enter all details before adding password")
    else:
        try:
            with open("data.json", mode="r") as list_file:
                # Read old data
                data = json.load(list_file)
                # Update old data with new data
                data.update(new_data)
        except FileNotFoundError:
            with open("data.json", "w") as list_file:
                # Saving the updated data by writing it to the file (and thus replacing the old data)
                json.dump(new_data, list_file, indent=4)
        else:
            with open("data.json", "w") as list_file:
                # Saving the updated data by writing it to the file (and thus replacing the old data)
                json.dump(data, list_file, indent=4)
        finally:
            website_entry.delete(0, END)
            password_entry.delete(0, END)
            website_entry.focus()


# ---------------------------- FIND DETAILS ------------------------------- #

def find_details():

    website = website_entry.get()

    try:
        with open("data.json", mode="r") as list_file:
            data = json.load(list_file)
            username = data[website]["username"]
            password = data[website]['password']
    except KeyError:
        messagebox.showinfo("Alert", "There are no details saved for this website.")
    except FileNotFoundError:
        messagebox.showinfo("Alert", "There are no details saved for this website.")
    else:
        messagebox.showinfo(website, f"Username: {username} \nPassword: {password}")

# ---------------------------- UI SETUP ------------------------------- #

window = Tk()
window.config(padx=50, pady=20)
window.title("Password Manager")


logo = PhotoImage(file="logo.png")
canvas = Canvas(width=200, height=200)
canvas.create_image(100, 100, image=logo)
canvas.grid(column=1, row=0)


# Labels
website_label = Label(text="Website:")
website_label.grid(column=0, row=1)

username_label = Label(text="Username:")
username_label.grid(column=0, row=2)

password_label = Label(text="Password:")
password_label.grid(column=0, row=3)

# Entries
website_entry = Entry(width=20)
website_entry.grid(column=1, row=1)
website_entry.focus()

username_entry = Entry(width=35)
username_entry.insert(0, "my_email@email.com")
username_entry.grid(column=1, row=2, columnspan=2)

password_entry = Entry(width=20)
password_entry.grid(column=1, row=3)

# Buttons
generate_password = Button(text="Generate Password", width=11, command=generate)
generate_password.grid(column=2,  row=3)

search = Button(text="Search", width=11, command=find_details)
search.grid(column=2,  row=1)

add = Button(text="Add", width=33, command=save_password)
add.grid(column=1, row=4, columnspan=2)



window.mainloop()
